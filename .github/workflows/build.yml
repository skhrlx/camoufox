name: Build and Release

on:
  workflow_dispatch:
  push:
    tags:
      - "*"

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        target: [linux, windows, macos]
    permissions:
      contents: write

    steps:
      - name: Maximize build space
        uses: AdityaGarg8/remove-unwanted-software@v4.1
        with:
          remove-dotnet: "true"
          remove-android: "true"
          remove-haskell: "true"
          remove-codeql: "true"
          remove-docker-images: "true"
          verbose: "false"

      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: "1.23"

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.11"

      - name: Set up Clang
        uses: egor-tensin/setup-clang@v1
        with:
          version: latest
          platform: x64

      - name: Check disk space
        run: df -h

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y msitools p7zip-full aria2

      - name: Restore .mozbuild cache
        uses: actions/cache/restore@v3
        with:
          path: ~/.mozbuild
          key: mozbuild-${{ matrix.target }}

      - name: Setup and bootstrap
        run: |
          make setup-minimal
          make mozbootstrap
          mkdir -p dist

      - name: List .mozbuild contents
        run: |
          ls -R ~/.mozbuild

      - name: Build
        run: python3 ./multibuild.py --target ${{ matrix.target }} --arch x86_64

      - name: Save .mozbuild cache
        uses: actions/cache/save@v3
        with:
          path: ~/.mozbuild
          key: mozbuild-${{ matrix.target }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: CamoufoxBuilds-${{ matrix.target }}
          path: dist/*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/**/*
          draft: true
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
